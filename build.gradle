plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.9'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.samsung'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion '0.8.10'
}

tasks.withType(Test) {
	jacoco.includeNoLocationClasses = true
	jacoco.excludes = ['jdk.internal.*']
}

tasks.create(name: "testCoverage", type: JacocoReport, dependsOn: "test") {

	group = "Reporting"
	description = "Generate Jacoco coverage reports for the test build."

	reports {
		html.required.set(true)
		xml.required.set(true)
	}

	def javaClasses = fileTree(dir: "${buildDir}/classes/java/main")
	classDirectories.from = files([javaClasses])

	sourceDirectories.from = files([
			"$project.projectDir/src/main/java",
	])

	executionData.from = files("${project.buildDir}/jacoco/test.exec")
}
